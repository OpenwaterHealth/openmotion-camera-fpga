//===========================================================================
// Verilog file generated by Clarity Designer    08/08/2024    11:09:42  
// Filename  : csi_dphy_rx_inst.v                                                
// IP package: CSI-2/DSI D-PHY Receiver 1.5                           
// Copyright(c) 2016 Lattice Semiconductor Corporation. All rights reserved. 
//===========================================================================

csi_dphy_rx csi_dphy_rx_inst (

               // Outputs
.clk_byte_o                  (clk_byte_o),
.clk_byte_hs_o               (clk_byte_hs_o),
                             
.cd_d0_o                     (cd_d0_o),
                             
.lp_d0_rx_p_o                (lp_d0_rx_p_o),
.lp_d0_rx_n_o                (lp_d0_rx_n_o),
.lp_d1_rx_p_o                (lp_d1_rx_p_o),
.lp_d1_rx_n_o                (lp_d1_rx_n_o),

.bd_o                        (bd_o),

.payload_en_o                (payload_en_o),
.payload_o                   (payload_o),

.sp_en_o                     (sp_en_o),
.lp_en_o                     (lp_en_o),
.lp_av_en_o                  (lp_av_en_o),
.dt_o                        (dt_o),
.vc_o                        (vc_o),
.wc_o                        (wc_o),
.ecc_o                       (ecc_o),
.ref_dt_i                    (ref_dt_i),
.hs_d_en_o                   (hs_d_en_o),
.hs_sync_o                   (hs_sync_o),
.term_clk_en_o               (term_clk_en_o),
.lp_hs_state_clk_o           (lp_hs_state_clk_o),
.lp_hs_state_d_o             (lp_hs_state_d_o),

.pd_dphy_i                   (pd_dphy_i),

// Inouts
.clk_n_i                     (clk_n_i),
.clk_p_i                     (clk_p_i),
.d0_n_i                      (d0_n_i),
.d0_p_i                      (d0_p_i),
.d1_n_i                      (d1_n_i),
.d1_p_i                      (d1_p_i),

// Inputs
.clk_byte_fr_i               (clk_byte_fr_i),
.clk_lp_ctrl_i               (clk_lp_ctrl_i),
.reset_byte_fr_n_i           (reset_byte_fr_n_i),
.reset_byte_n_i              (reset_byte_n_i),
.reset_lp_n_i                (reset_lp_n_i),
.reset_n_i                   (reset_n_i),
.pll_lock_i                  (pll_lock_i) // tie to 1 if no pll is used

);
  

